{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","console","info","toTimeString","slice","setState","clearInterval","className","props","name","React","Component","App","hasClock","clockName","showClock","hideClock","event","preventDefault","value","now","toString","getRandomName","document","addEventListener","prevState","debug","ReactDOM","render","getElementById"],"mappings":"6NAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAQ,IAAIC,KAElBG,OAAOE,QAAQC,KAAKP,EAAMQ,eAAeC,MAAM,EAAG,IAElD,EAAKC,SAAS,CAAEV,YACf,OAdP,kCAiBE,WACEI,OAAOO,cAAcR,KAAKD,WAlB9B,oBAqBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKY,UAAU,MAAf,UACE,6CAEA,sBAAKA,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,KAAKU,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGZ,EAAMQ,eAAeC,MAAM,EAAG,eApC3C,GAA2BM,IAAMC,WCQ1B,IAAMC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,EACVC,UAAW,WAHf,EAMEjB,QAAU,EANZ,EAQEkB,UAAY,WACL,EAAKrB,MAAMmB,UACd,EAAKR,SAAS,CAAEQ,UAAU,KAVhC,EAcEG,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKb,SAAS,CAAEQ,UAAU,KAhB9B,uDAmBE,WAAqB,IAAD,OAClBf,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMc,EAhCZ,WACE,IAAMK,EAAQvB,KAAKwB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,GA6BMG,GAElB,EAAKjB,SAAS,CAAES,gBACf,MAEHS,SAASC,iBAAiB,QAAS1B,KAAKiB,WACxCQ,SAASC,iBAAiB,cAAe1B,KAAKkB,aA3BlD,gCA8BE,WAAuBS,GAAmB,eACpC3B,KAAKJ,MAAMmB,UAAYY,EAAUX,YAAchB,KAAKJ,MAAMoB,WAC5Df,OAAOE,QAAQyB,MAAf,uBACkBD,EAAUX,UAD5B,eAC4ChB,KAAKJ,MAAMoB,cAjC7D,kCAsCE,WACEf,OAAOO,cAAcR,KAAKD,WAvC9B,oBA0CE,WACE,OACEC,KAAKJ,MAAMmB,SAAW,cAAC,EAAD,CAAOJ,KAAMX,KAAKJ,MAAMoB,YAAgB,SA5CpE,GAAyBJ,IAAMC,WCf/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.fdcd6d24.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  today: Date;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const today = new Date();\n\n      window.console.info(today.toTimeString().slice(0, 8));\n\n      this.setState({ today });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {this.props.name}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {today.toTimeString().slice(0, 8)}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-empty-pattern */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  showClock = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  hideClock = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n  }\n\n  componentDidUpdate({}, prevState: State) {\n    if (this.state.hasClock && prevState.clockName !== this.state.clockName) {\n      window.console.debug(\n        `Renamed from ${prevState.clockName} to ${this.state.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      this.state.hasClock ? <Clock name={this.state.clockName} /> : null\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}